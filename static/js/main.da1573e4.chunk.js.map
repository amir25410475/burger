{"version":3,"sources":["assets/images/burger-logo.png","hoc/Aux.js","Components/Logo/Logo.js","Components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","Components/Navigation/NavigationItems/NavigationItems.js","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","Components/Navigation/Toolbar/Toolbar.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/SideDrawer/SideDrawer.js","Components/Layout/Layout.js","Components/Burger/BurgerIngredient/BurgerIngredient.js","Components/Burger/Burger.js","Components/Burger/BuildControls/BuildControl/BuildControl.js","Components/Burger/BuildControls/BuildControls.js","Components/UI/Modal/Modal.js","Components/UI/Button/Button.js","Components/Burger/OrderSummary/OrderSummary.js","Containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","Logo","className","style","height","src","burgerLogo","alt","NavigationItem","href","link","active","NavigationItems","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","Backdrop","show","SideDrawer","attachedClasses","open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Component","BurgerIngredient","ingredient","type","Burger","transformedIngredients","Object","keys","ingredients","map","igkey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","label","disabled","removed","added","controls","BuildControls","price","toFixed","ctrl","addedIngredients","removedIngredients","ordered","purchasable","Modal","nextProps","nextState","console","log","modalClosed","opacity","transform","Button","btnType","OrderSummary","ingredientSummary","textTransform","Canceled","continued","ingredientPrices","salad","bacon","cheese","meat","BurgerBuilder","totalPrice","purchasing","purchaseCancelHandler","purchaseContinueHandler","alert","purchaseHandler","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","sum","disabledInfo","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,yC,uaCE5BC,EAFH,SAACC,GAAD,OAAWA,EAAMC,U,8BCUdC,G,MANF,SAACF,GAAD,OACT,yBAAKG,UAAU,OAAOC,MAAO,CAACC,OAAQL,EAAMK,SACxC,yBAAKC,IAAKC,IAAYC,IAAI,kBCInBC,G,YAPQ,SAACT,GAAD,OACnB,wBAAIG,UAAU,kBACV,uBAAGO,KAAMV,EAAMW,KACfR,UAAWH,EAAMY,OAAS,SAAW,MAAOZ,EAAMC,SADlD,QCMOY,EAPS,SAACb,GAAD,OACpB,wBAAIG,UAAU,mBACV,kBAAC,EAAD,CAAgBQ,KAAK,IAAIC,QAAM,GAA/B,kBACA,kBAAC,EAAD,CAAgBD,KAAK,KAArB,cCIOG,G,MARM,SAACd,GAAD,OACjB,yBAAKG,UAAU,eAAeY,QAASf,EAAMgB,SACzC,8BACA,8BACA,iCCSOC,EAVC,SAACjB,GAAD,OACZ,4BAAQG,UAAU,WACd,kBAAC,EAAD,CAAca,QAAShB,EAAMkB,sBAC7B,kBAAC,EAAD,CAAMb,OAAO,QACb,yBAAKF,UAAU,eACX,kBAAC,EAAD,SCHGgB,G,YALE,SAACnB,GAAD,OACbA,EAAMoB,KAAO,yBAAKjB,UAAU,WAC5BY,QAASf,EAAMgB,UAAkB,OCoBtBK,EAlBI,SAACrB,GAChB,IAAIsB,EAAkB,CAAC,aAAc,SAIrC,OAHGtB,EAAMuB,OACLD,EAAkB,CAAC,aAAc,SAGjC,kBAACE,EAAD,KACI,kBAAC,EAAD,CAAUJ,KAAMpB,EAAMuB,KAAMP,QAAShB,EAAMyB,SAC3C,yBAAKtB,UAAWmB,EAAgBI,KAAK,MACjC,kBAAC,EAAD,CAAMrB,OAAO,QACb,6BACI,kBAAC,EAAD,UCmBLsB,E,2MA9BXC,MAAQ,CACJC,gBAAiB,G,EAErBC,wBAA0B,WACtB,EAAKC,SAAS,CACVF,gBAAiB,K,EAGzBG,wBAA0B,WACtB,EAAKD,UAAS,SAACE,GACX,MAAO,CACHJ,gBAAkBI,EAAUJ,oB,wEAKpC,OACI,kBAACL,EAAD,KACI,kBAAC,EAAD,CAASN,oBAAqBgB,KAAKF,0BACnC,kBAAC,EAAD,CACAT,KAAMW,KAAKN,MAAMC,eACjBJ,OAAQS,KAAKJ,0BACb,0BAAM3B,UAAU,WACX+B,KAAKlC,MAAMC,e,GAxBXkC,a,eCkCNC,G,6LAlCP,IAAIC,EAAa,KACrB,OAAOH,KAAKlC,MAAMsC,MACd,IAAK,eACDD,EAAa,yBAAKlC,UAAU,gBAC5B,MACJ,IAAK,YACDkC,EAAa,yBAAKlC,UAAU,YACxB,yBAAKA,UAAU,WACf,yBAAKA,UAAU,YAEnB,MACJ,IAAK,OACDkC,EAAa,yBAAKlC,UAAU,SAC5B,MACJ,IAAK,SACDkC,EAAa,yBAAKlC,UAAU,WAC5B,MACJ,IAAK,QACDkC,EAAa,yBAAKlC,UAAU,UAC5B,MACJ,IAAK,QACDkC,EAAa,yBAAKlC,UAAU,UAC5B,MACJ,QACIkC,EAAa,KAErB,OAAOA,M,GA5BoBF,cCwBhBI,EAxBA,SAACvC,GACZ,IAAIwC,EAAyBC,OAAOC,KAAK1C,EAAM2C,aAC9CC,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAM9C,EAAM2C,YAAYE,KAClCD,KAAI,SAACG,EAAEC,GACJ,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAGV,KAAMO,UAGtDK,QAAO,SAACC,EAAIC,GACT,OAAOD,EAAIE,OAAOD,KACpB,IAKF,OAHqC,IAAlCZ,EAAuBc,SACtBd,EAAyB,+DAGzB,yBAAKrC,UAAU,UACX,kBAAC,EAAD,CAAkBmC,KAAK,cACtBE,EACD,kBAAC,EAAD,CAAkBF,KAAK,mBCVpBiB,G,YAVM,SAACvD,GAAD,OACjB,yBAAKG,UAAU,gBACX,yBAAKA,UAAU,SAASH,EAAMwD,MAA9B,KACA,4BAAQrD,UAAU,OAClBsD,SAAUzD,EAAMyD,SAChB1C,QAASf,EAAM0D,SAFf,QAGA,4BAAQvD,UAAU,OAAOY,QAASf,EAAM2D,OAAxC,WCLFC,EAAW,CACb,CAAEJ,MAAQ,QAASlB,KAAO,SAC1B,CAAEkB,MAAQ,QAASlB,KAAO,SAC1B,CAAEkB,MAAQ,SAAUlB,KAAO,UAC3B,CAAEkB,MAAQ,OAAQlB,KAAO,SAqBduB,EAlBO,SAAC7D,GAAD,OAClB,yBAAKG,UAAU,iBACX,8CAAmB,oCAAUH,EAAM8D,MAAMC,QAAQ,GAA9B,KAAnB,KACCH,EAAShB,KAAI,SAAAoB,GAAI,OACd,kBAAC,EAAD,CACAf,IAAKe,EAAKR,MACVA,MAAOQ,EAAKR,MACZG,MAAO,kBAAM3D,EAAMiE,iBAAiBD,EAAK1B,OACzCoB,QAAS,kBAAM1D,EAAMkE,mBAAmBF,EAAK1B,OAC7CmB,SAAUzD,EAAMyD,SAASO,EAAK1B,WAElC,4BACAvB,QAASf,EAAMmE,QACfV,UAAWzD,EAAMoE,YACjBjE,UAAU,eAHV,eCOOkE,G,oMAvBWC,EAAWC,GAC7B,OAAOD,EAAUlD,OAASc,KAAKlC,MAAMoB,O,4CAIrCoD,QAAQC,IAAI,wB,+BAGZ,OACI,kBAACjD,EAAD,KACI,kBAAC,EAAD,CAAUJ,KAAMc,KAAKlC,MAAMoB,KAAMJ,QAASkB,KAAKlC,MAAM0E,cACrD,yBAAKvE,UAAU,QACXC,MAAO,CACHuE,QAASzC,KAAKlC,MAAMoB,KAAO,IAAM,IACjCwD,UAAW1C,KAAKlC,MAAMoB,KAAO,gBAAkB,uBAElDc,KAAKlC,MAAMC,e,GAjBZkC,cCIL0C,G,MANA,SAAC7E,GAAD,OACX,4BACAe,QAASf,EAAMgB,QACfb,UAAmB,CAACH,EAAM8E,SAASpD,KAAK,MAAQ1B,EAAMC,SAFtD,OC8BW8E,E,8LA5BPP,QAAQC,IAAI,+B,+BAGN,IAAD,OACCO,EAAoBvC,OAAOC,KAAKR,KAAKlC,MAAM2C,aAC5CC,KAAI,SAAAC,GACD,OACI,wBAAII,IAAKJ,GACL,0BAAMzC,MAAO,CAAE6E,cAAe,eAAiBpC,GADnD,MACoE,EAAK7C,MAAM2C,YAAYE,OAIvG,OACI,kBAACrB,EAAD,KACI,0CACA,8EACA,4BACKwD,GAEL,4CAAiB,gCAAS9C,KAAKlC,MAAM8D,MAAMC,QAAQ,IAAnD,KACA,qDACA,kBAAC,EAAD,CAAQe,QAAQ,SAAS9D,QAASkB,KAAKlC,MAAMkF,UAA7C,UACA,kBAAC,EAAD,CAAQJ,QAAQ,UAAU9D,QAASkB,KAAKlC,MAAMmF,WAA9C,iB,GAxBWhD,aCGrBiD,EAAmB,CACrBC,MAAQ,GACRC,MAAQ,GACRC,OAAS,GACTC,KAAO,GA4GIC,E,2MAxGX7D,MAAQ,CACJe,YAAa,CACT0C,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAEVE,WAAa,EACbtB,aAAc,EACduB,YAAa,G,EAEjBC,sBAAwB,WACpB,EAAK7D,SAAS,CACV4D,YAAa,K,EAGrBE,wBAA0B,WACtBC,MAAM,qB,EAEVC,gBAAkB,WACd,EAAKhE,SAAS,CACV4D,YAAa,K,EAgBrBK,qBAAuB,SAAC1D,GACpB,IACM2D,EADW,EAAKrE,MAAMe,YAAYL,GACR,EAC1B4D,EAAkB,eACjB,EAAKtE,MAAMe,aAElBuD,EAAmB5D,GAAQ2D,EAC3B,IAAME,EAAgBf,EAAiB9C,GAEjC8D,EADW,EAAKxE,MAAM8D,WACAS,EAC5B,EAAKpE,SAAS,CACVY,YAAcuD,EACdR,WAAaU,IAEjB,EAAKC,oBAAoBH,I,EAE7BI,wBAA0B,SAAChE,GACvB,IAAMiE,EAAW,EAAK3E,MAAMe,YAAYL,GACxC,GAAGiE,GAAY,EACX,OAAOT,MAAM,0BAEjB,IAAMG,EAAeM,EAAW,EAC1BL,EAAkB,eACjB,EAAKtE,MAAMe,aAElBuD,EAAmB5D,GAAQ2D,EAC3B,IAAME,EAAgBf,EAAiB9C,GAEjC8D,EADW,EAAKxE,MAAM8D,WACAS,EAC5B,EAAKpE,SAAS,CACVY,YAAcuD,EACdR,WAAaU,IAEjB,EAAKC,oBAAoBH,I,mFA9CRvD,GAEjB,IAAM6D,EAAM/D,OAAOC,KAAKC,GACnBC,KAAI,SAAAC,GACD,OAAOF,EAAYE,MAEtBK,QAAO,SAACsD,EAAIpD,GACT,OAAOoD,EAAMpD,IACd,GACHlB,KAAKH,SAAS,CACVqC,YAAcoC,EAAM,M,+BAwC5B,IAAMC,EAAY,eACXvE,KAAKN,MAAMe,aAElB,IAAI,IAAIM,KAAOwD,EACXA,EAAaxD,GAAOwD,EAAaxD,IAAQ,EAE7C,OACI,kBAACzB,EAAD,KACI,kBAAC,EAAD,CACAkD,YAAaxC,KAAK0D,sBAClBxE,KAAMc,KAAKN,MAAM+D,YACb,kBAAC,EAAD,CACA7B,MAAO5B,KAAKN,MAAM8D,WAClBP,UAAWjD,KAAK2D,wBAChBX,SAAUhD,KAAK0D,sBACfjD,YAAaT,KAAKN,MAAMe,eAE5B,kBAAC,EAAD,CAAQA,YAAaT,KAAKN,MAAMe,cAChC,kBAAC,EAAD,CACAsB,iBAAkB/B,KAAK8D,qBACvB9B,mBAAoBhC,KAAKoE,wBACzB7C,SAAUgD,EACVrC,YAAalC,KAAKN,MAAMwC,YACxBN,MAAO5B,KAAKN,MAAM8D,WAClBvB,QAASjC,KAAK6D,uB,GAnGF5D,aCEbuE,E,iLAVX,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,EAAD,Y,GALQvE,aCQEwE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.da1573e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const aux = (props) => props.children\r\n\r\nexport default aux","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport './Logo.css'\r\n\r\nconst Logo = (props) => (\r\n    <div className=\"Logo\" style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"burgerLogo\"/>\r\n    </div>\r\n)\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './NavigationItem.css'\r\n\r\nconst NavigationItem = (props) => (\r\n    <li className=\"NavigationItem\">\r\n        <a href={props.link}\r\n        className={props.active ? 'active' : null}>{props.children} </a>\r\n    </li>\r\n)\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport './NavigationItems.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst NavigationItems = (props) => (\r\n    <ul className=\"NavigationItems\">\r\n        <NavigationItem link=\"/\" active>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/\">checkout</NavigationItem>\r\n    </ul>\r\n)\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport './DrawerToggle.css'\r\n\r\nconst DrawerToggle = (props) => (\r\n    <div className=\"DrawerToggle\" onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\nimport './Toolbar.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst Toolbar = (props) => (\r\n    <header className=\"Toolbar\">\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <Logo height=\"80%\" />\r\n        <nav className=\"DesktopOnly\">\r\n            <NavigationItems/>\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className=\"Backdrop\" \r\n    onClick={props.clicked}></div> : null\r\n)\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo'\r\nimport Navigationitems from '../NavigationItems/NavigationItems'\r\nimport './SideDrawer.css'\r\nimport Aux from '../../../hoc/Aux'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\nconst SideDrawer = (props) => {\r\n    let attachedClasses = ['SideDrawer', 'Close']\r\n    if(props.open){\r\n        attachedClasses = ['SideDrawer', 'Open']\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <Logo height=\"11%\" />\r\n                <nav>\r\n                    <Navigationitems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default SideDrawer;","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Aux'\r\nimport './Layout.css'\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer'\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer : false \r\n    }\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({\r\n            showSideDrawer : false\r\n        })\r\n    }\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                showSideDrawer : !prevState.showSideDrawer\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer \r\n                open={this.state.showSideDrawer}\r\n                closed={this.sideDrawerClosedHandler} />\r\n                <main className=\"Content\">\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport './BurgerIngredient.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null\r\n    switch(this.props.type){\r\n        case('bread-bottom') :\r\n            ingredient = <div className=\"BreadBottom\"></div>\r\n            break ;\r\n        case('bread-top') : \r\n            ingredient = <div className=\"BreadTop\">\r\n                <div className=\"Seeds1\"></div>\r\n                <div className=\"Seeds2\"></div>\r\n            </div>\r\n            break ;\r\n        case('meat') :\r\n            ingredient = <div className=\"Meat\"></div>\r\n            break ;\r\n        case('cheese') :\r\n            ingredient = <div className=\"Cheese\"></div>\r\n            break ;\r\n        case('salad') :\r\n            ingredient = <div className=\"Salad\"></div>\r\n            break ;\r\n        case('bacon') :\r\n            ingredient = <div className=\"Bacon\"></div>\r\n            break ;\r\n        default :\r\n            ingredient = null\r\n    }\r\n    return ingredient\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes ={\r\n    type : PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport './Burger.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst Burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igkey => {\r\n        return [...Array(props.ingredients[igkey])]\r\n        .map((_,i) =>{\r\n            return <BurgerIngredient key={igkey + i} type={igkey} />\r\n        })\r\n    })\r\n    .reduce((arr,el) => {\r\n        return arr.concat(el)\r\n    },[])\r\n    // console.log(transformedIngredients);\r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>please start adding ingredients</p>\r\n    }\r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Burger;","import React from 'react';\r\nimport './BuildControl.css'\r\n\r\nconst BuildControl = (props) => (\r\n    <div className=\"BuildControl\">\r\n        <div className=\"Label\">{props.label} </div>\r\n        <button className=\"Less\" \r\n        disabled={props.disabled}\r\n        onClick={props.removed}>less</button>\r\n        <button className=\"More\" onClick={props.added}>More</button>\r\n    </div>\r\n)\r\n\r\nexport default BuildControl;","import React from 'react';\r\nimport './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    { label : 'Salad', type : 'salad' },\r\n    { label : 'Bacon', type : 'bacon' },\r\n    { label : 'Cheese', type : 'cheese' },\r\n    { label : 'Meat', type : 'meat' },\r\n]\r\n\r\nconst BuildControls = (props) => (\r\n    <div className=\"BuildControls\">\r\n        <p>Current Price : <strong> {props.price.toFixed(2)} </strong> </p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n            key={ctrl.label} \r\n            label={ctrl.label}\r\n            added={() => props.addedIngredients(ctrl.type) }\r\n            removed={() => props.removedIngredients(ctrl.type) }\r\n            disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button\r\n        onClick={props.ordered}\r\n        disabled={!props.purchasable} \r\n        className=\"OrderButton\">ORDER NOW</button>\r\n    </div>\r\n)\r\n\r\nexport default BuildControls;","import React, { Component } from 'react';\r\nimport './Modal.css'\r\nimport Aux from '../../../hoc/Aux'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps.show !== this.props.show\r\n    }\r\n\r\n    componentWillUpdate(){\r\n        console.log('[Modal] willUpdate')\r\n    }\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div className=\"Modal\"\r\n                    style={{\r\n                        opacity: this.props.show ? '1' : '0',\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport './Button.css'\r\n\r\nconst Button = (props) => (\r\n    <button \r\n    onClick={props.clicked}\r\n    className={Button, [props.btnType].join(' ') }>{props.children} </button>\r\n)\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Aux'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nclass OrderSummary extends Component {\r\n    componentWillUpdate(){\r\n        console.log('[orderSummary] willUpdate');       \r\n    }\r\n    \r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igkey => {\r\n                return (\r\n                    <li key={igkey}>\r\n                        <span style={{ textTransform: 'capitalize' }}>{igkey}</span> : {this.props.ingredients[igkey]}\r\n                    </li>\r\n                )\r\n            })\r\n        return (\r\n            <Aux>\r\n                <h3>Your order</h3>\r\n                <p>A delicious burger with the flowing ingredients</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p>Total Price : <strong>{this.props.price.toFixed(2)}</strong> </p>\r\n                <p>Continue to checkout ?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.Canceled}>Cancel</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.continued}>Continue</Button>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderSummary;\r\n","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Aux'\r\nimport Burger from '../../Components/Burger/Burger'\r\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../Components/UI/Modal/Modal'\r\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary'\r\n\r\nconst ingredientPrices = {\r\n    salad : 0.4,\r\n    bacon : 0.7,\r\n    cheese : 0.9,\r\n    meat : 1,\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0,\r\n        },\r\n        totalPrice : 4,\r\n        purchasable : false,\r\n        purchasing : false,\r\n    }\r\n    purchaseCancelHandler = () => {\r\n        this.setState({\r\n            purchasing : false\r\n        })\r\n    }\r\n    purchaseContinueHandler = () => {\r\n        alert('you are continue')\r\n    }\r\n    purchaseHandler = () => {\r\n        this.setState({\r\n            purchasing : true\r\n        })\r\n    }\r\n    updatePurchaseState (ingredients) {\r\n        \r\n        const sum = Object.keys(ingredients)\r\n            .map(igkey => {\r\n                return ingredients[igkey]\r\n            })\r\n            .reduce((sum,el) => {\r\n                return sum + el\r\n            }, 0)\r\n            this.setState({\r\n                purchasable : sum > 0\r\n            })\r\n    }\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type]\r\n        const updatedCount = oldCount + 1 \r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount\r\n        const priceAddition = ingredientPrices[type]\r\n        const oldPrice = this.state.totalPrice\r\n        const newPrice = oldPrice + priceAddition\r\n        this.setState({\r\n            ingredients : updatedIngredients,\r\n            totalPrice : newPrice\r\n        })\r\n        this.updatePurchaseState(updatedIngredients)\r\n    }\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type]\r\n        if(oldCount <= 0){\r\n            return alert('please add ingredients')\r\n        }\r\n        const updatedCount = oldCount - 1 \r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedCount\r\n        const priceAddition = ingredientPrices[type]\r\n        const oldPrice = this.state.totalPrice\r\n        const newPrice = oldPrice - priceAddition\r\n        this.setState({\r\n            ingredients : updatedIngredients,\r\n            totalPrice : newPrice\r\n        })\r\n        this.updatePurchaseState(updatedIngredients)\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal \r\n                modalClosed={this.purchaseCancelHandler}\r\n                show={this.state.purchasing}>\r\n                    <OrderSummary \r\n                    price={this.state.totalPrice}\r\n                    continued={this.purchaseContinueHandler}\r\n                    Canceled={this.purchaseCancelHandler}\r\n                    ingredients={this.state.ingredients} />\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls \r\n                addedIngredients={this.addIngredientHandler}\r\n                removedIngredients={this.removeIngredientHandler}\r\n                disabled={disabledInfo}\r\n                purchasable={this.state.purchasable}\r\n                price={this.state.totalPrice}\r\n                ordered={this.purchaseHandler} />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React, { Component } from 'react';\nimport Layout from './Components/Layout/Layout'\nimport BurgerBuilder from './Containers/BurgerBuilder/BurgerBuilder'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <BurgerBuilder/>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}